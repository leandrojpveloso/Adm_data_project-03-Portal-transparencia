"01-raw/01-tender-purchases",
paste0("portal_01-tender_",year,".csv.gz")
)
)
}
# appending
tender_panel =  rbindlist(panel_list, fill = TRUE, idcol="year_month")
# Tender panel
data_ug<-
tender_panel %>%
select(ug_id, ug_municipality,ug_state  ) %>%
distinct(ug_id, ug_municipality,ug_state)
sum(duplicated(data_ug$ug_id))
count(data_ug, ug_state)
data_ug <- data_ug %>%
mutate(uf_code = case_when(
ug_state == "ro" ~ "11",
ug_state == "ac" ~ "12",
ug_state == "am" ~ "13",
ug_state == "rr" ~ "14",
ug_state == "pa" ~ "15",
ug_state == "ap" ~ "16",
ug_state == "to" ~ "17",
ug_state == "ma" ~ "21",
ug_state == "pi" ~ "22",
ug_state == "ce" ~ "23",
ug_state == "rn" ~ "24",
ug_state == "pb" ~ "25",
ug_state == "pe" ~ "26",
ug_state == "al" ~ "27",
ug_state == "se" ~ "28",
ug_state == "ba" ~ "29",
ug_state == "mg" ~ "31",
ug_state == "es" ~ "32",
ug_state == "rj" ~ "33",
ug_state == "sp" ~ "35",
ug_state == "pr" ~ "41",
ug_state == "sc" ~ "42",
ug_state == "rs" ~ "43",
ug_state == "ms" ~ "50",
ug_state == "mt" ~ "51",
ug_state == "go" ~ "52",
ug_state == "df" ~ "53")
)
data_munic =   read_excel(file.path(path_dtb,
"01-ibge_divisao_territorial_municipality_level.xlsx")
) %>%
select(UF,Nome_UF,`Código Município Completo`,Nome_Município ) %>%
rename(
uf_name        = Nome_UF,
uf_code        = UF     ,
munic_code     = `Código Município Completo`,
munic_name     = Nome_Município) %>%
mutate( munic_name =  clean_strings(munic_name, FALSE),
uf_name    =  clean_strings(uf_name   , FALSE)  )
data_ug =
data_ug %>%
left_join(data_munic, by = c("ug_municipality"="munic_name",
"uf_code"="uf_code"))
# last adjust
data_ug = data_ug %>%
distinct(ug_id, ug_municipality,ug_state, .keep_all = TRUE) %>%
rename(ug_state_code = uf_code,
ug_state_name = uf_name,
ug_munic_code = munic_code,
ug_munic_name = ug_municipality,
) %>%
relocate(ug_id,ug_state,ug_munic_code, ug_state_name,ug_state_name)
}
View(data_ug)
## Made by Leandro Justino Pereira Veloso
## main: Simple cleaning to tender
## /*============================================================================*/
# 02: Tender data ----
{
# starting with an empty list
panel_list<- list()
index= 0
for (year in 2013:2022) {
# saving .csv
index <- index+1
panel_list[[paste0(year,month)]] <-
fread(file.path(dropbox_dir,
"01-raw/01-tender-purchases",
paste0("portal_01-tender_",year,".csv.gz")
)
)
}
# appending
tender_panel =  rbindlist(panel_list, fill = TRUE, idcol="year_month")
# Tender panel
data_ug<-
tender_panel %>%
select(ug_id, ug_municipality,ug_state  ) %>%
distinct(ug_id, ug_municipality,ug_state)
sum(duplicated(data_ug$ug_id))
count(data_ug, ug_state)
data_ug <- data_ug %>%
mutate(uf_code = case_when(
ug_state == "ro" ~ "11",
ug_state == "ac" ~ "12",
ug_state == "am" ~ "13",
ug_state == "rr" ~ "14",
ug_state == "pa" ~ "15",
ug_state == "ap" ~ "16",
ug_state == "to" ~ "17",
ug_state == "ma" ~ "21",
ug_state == "pi" ~ "22",
ug_state == "ce" ~ "23",
ug_state == "rn" ~ "24",
ug_state == "pb" ~ "25",
ug_state == "pe" ~ "26",
ug_state == "al" ~ "27",
ug_state == "se" ~ "28",
ug_state == "ba" ~ "29",
ug_state == "mg" ~ "31",
ug_state == "es" ~ "32",
ug_state == "rj" ~ "33",
ug_state == "sp" ~ "35",
ug_state == "pr" ~ "41",
ug_state == "sc" ~ "42",
ug_state == "rs" ~ "43",
ug_state == "ms" ~ "50",
ug_state == "mt" ~ "51",
ug_state == "go" ~ "52",
ug_state == "df" ~ "53")
)
data_munic =   read_excel(file.path(path_dtb,
"01-ibge_divisao_territorial_municipality_level.xlsx")
) %>%
select(UF,Nome_UF,`Código Município Completo`,Nome_Município ) %>%
rename(
uf_name        = Nome_UF,
uf_code        = UF     ,
munic_code     = `Código Município Completo`,
munic_name     = Nome_Município) %>%
mutate( munic_name =  clean_strings(munic_name, FALSE),
uf_name    =  clean_strings(uf_name   , FALSE)  )
data_ug =
data_ug %>%
left_join(data_munic, by = c("ug_municipality"="munic_name",
"uf_code"="uf_code")) %>%
select(-ug_state)
# last adjust
data_ug = data_ug %>%
distinct(ug_id, ug_municipality,ug_state, .keep_all = TRUE) %>%
rename(ug_state_code = uf_code,
ug_state_name = uf_name,
ug_munic_code = munic_code,
ug_munic_name = ug_municipality,
) %>%
relocate(ug_id,ug_state_code,ug_munic_code, ug_state_name,ug_state_name)
}
data_ug =
data_ug %>%
left_join(data_munic, by = c("ug_municipality"="munic_name",
"uf_code"="uf_code")) %>%
select(-ug_state)
# last adjust
data_ug = data_ug %>%
distinct(ug_id, .keep_all = TRUE) %>%
rename(ug_state_code = uf_code,
ug_state_name = uf_name,
ug_munic_code = munic_code,
ug_munic_name = ug_municipality,
) %>%
relocate(ug_id,ug_state_code,ug_munic_code, ug_state_name,ug_state_name)
View(data_ug)
# last adjust
data_ug = data_ug %>%
distinct(ug_id, .keep_all = TRUE) %>%
rename(ug_state_code = uf_code,
ug_state_name = uf_name,
ug_munic_code = munic_code,
ug_munic_name = ug_municipality,
) %>%
relocate(ug_id,ug_state_code,ug_munic_code, ug_state_name,ug_state_name) %>%
order(ug_state_code)
## Made by Leandro Justino Pereira Veloso
## main: Simple cleaning to tender
## /*============================================================================*/
# 02: Tender data ----
{
# starting with an empty list
panel_list<- list()
index= 0
for (year in 2013:2022) {
# saving .csv
index <- index+1
panel_list[[paste0(year,month)]] <-
fread(file.path(dropbox_dir,
"01-raw/01-tender-purchases",
paste0("portal_01-tender_",year,".csv.gz")
)
)
}
# appending
tender_panel =  rbindlist(panel_list, fill = TRUE, idcol="year_month")
# Tender panel
data_ug<-
tender_panel %>%
select(ug_id, ug_municipality,ug_state  ) %>%
distinct(ug_id, ug_municipality,ug_state)
sum(duplicated(data_ug$ug_id))
count(data_ug, ug_state)
data_ug <- data_ug %>%
mutate(uf_code = case_when(
ug_state == "ro" ~ "11",
ug_state == "ac" ~ "12",
ug_state == "am" ~ "13",
ug_state == "rr" ~ "14",
ug_state == "pa" ~ "15",
ug_state == "ap" ~ "16",
ug_state == "to" ~ "17",
ug_state == "ma" ~ "21",
ug_state == "pi" ~ "22",
ug_state == "ce" ~ "23",
ug_state == "rn" ~ "24",
ug_state == "pb" ~ "25",
ug_state == "pe" ~ "26",
ug_state == "al" ~ "27",
ug_state == "se" ~ "28",
ug_state == "ba" ~ "29",
ug_state == "mg" ~ "31",
ug_state == "es" ~ "32",
ug_state == "rj" ~ "33",
ug_state == "sp" ~ "35",
ug_state == "pr" ~ "41",
ug_state == "sc" ~ "42",
ug_state == "rs" ~ "43",
ug_state == "ms" ~ "50",
ug_state == "mt" ~ "51",
ug_state == "go" ~ "52",
ug_state == "df" ~ "53")
)
data_munic =   read_excel(file.path(path_dtb,
"01-ibge_divisao_territorial_municipality_level.xlsx")
) %>%
select(UF,Nome_UF,`Código Município Completo`,Nome_Município ) %>%
rename(
uf_name        = Nome_UF,
uf_code        = UF     ,
munic_code     = `Código Município Completo`,
munic_name     = Nome_Município) %>%
mutate( munic_name =  clean_strings(munic_name, FALSE),
uf_name    =  clean_strings(uf_name   , FALSE)  )
data_ug =
data_ug %>%
left_join(data_munic, by = c("ug_municipality"="munic_name",
"uf_code"="uf_code")) %>%
select(-ug_state)
# last adjust
data_ug = data_ug %>%
distinct(ug_id, .keep_all = TRUE) %>%
rename(ug_state_code = uf_code,
ug_state_name = uf_name,
ug_munic_code = munic_code,
ug_munic_name = ug_municipality,
) %>%
relocate(ug_id,ug_state_code,ug_munic_code, ug_state_name,ug_state_name) %>%
order(ug_state_code)
}
# last adjust
data_ug_clean = data_ug %>%
distinct(ug_id, .keep_all = TRUE) %>%
rename(ug_state_code = uf_code,
ug_state_name = uf_name,
ug_munic_code = munic_code,
ug_munic_name = ug_municipality,
) %>%
relocate(ug_id,ug_state_code,ug_munic_code, ug_state_name,ug_state_name)
View(data_ug_clean)
# last adjust
data_ug_clean = data_ug %>%
distinct(ug_id, .keep_all = TRUE) %>%
rename(ug_state_code = uf_code,
ug_state_name = uf_name,
ug_munic_code = munic_code,
ug_munic_name = ug_municipality,
) %>%
relocate(ug_id,ug_state_code,ug_munic_code, ug_state_name,ug_state_name) %>%
arrange(ug_state_code, ug_munic_code)
View(data_ug_clean)
View(data_ug_clean)
# Save the data frame to a Stata .dta file
data_ug_clean %>%
write_dta(file.path(dropbox_dir,
"02-import",
"04-buyer_data.dta"))
library(haven)
## Made by Leandro Justino Pereira Veloso
## main: Simple cleaning to tender
## /*============================================================================*/
library(haven)
# 02: Tender data ----
{
# starting with an empty list
panel_list<- list()
index= 0
for (year in 2013:2022) {
# saving .csv
index <- index+1
panel_list[[paste0(year,month)]] <-
fread(file.path(dropbox_dir,
"01-raw/01-tender-purchases",
paste0("portal_01-tender_",year,".csv.gz")
)
)
}
# appending
tender_panel =  rbindlist(panel_list, fill = TRUE, idcol="year_month")
# Tender panel
data_ug<-
tender_panel %>%
select(ug_id, ug_municipality,ug_state  ) %>%
distinct(ug_id, ug_municipality,ug_state)
sum(duplicated(data_ug$ug_id))
count(data_ug, ug_state)
data_ug <- data_ug %>%
mutate(uf_code = case_when(
ug_state == "ro" ~ "11",
ug_state == "ac" ~ "12",
ug_state == "am" ~ "13",
ug_state == "rr" ~ "14",
ug_state == "pa" ~ "15",
ug_state == "ap" ~ "16",
ug_state == "to" ~ "17",
ug_state == "ma" ~ "21",
ug_state == "pi" ~ "22",
ug_state == "ce" ~ "23",
ug_state == "rn" ~ "24",
ug_state == "pb" ~ "25",
ug_state == "pe" ~ "26",
ug_state == "al" ~ "27",
ug_state == "se" ~ "28",
ug_state == "ba" ~ "29",
ug_state == "mg" ~ "31",
ug_state == "es" ~ "32",
ug_state == "rj" ~ "33",
ug_state == "sp" ~ "35",
ug_state == "pr" ~ "41",
ug_state == "sc" ~ "42",
ug_state == "rs" ~ "43",
ug_state == "ms" ~ "50",
ug_state == "mt" ~ "51",
ug_state == "go" ~ "52",
ug_state == "df" ~ "53")
)
data_munic =   read_excel(file.path(path_dtb,
"01-ibge_divisao_territorial_municipality_level.xlsx")
) %>%
select(UF,Nome_UF,`Código Município Completo`,Nome_Município ) %>%
rename(
uf_name        = Nome_UF,
uf_code        = UF     ,
munic_code     = `Código Município Completo`,
munic_name     = Nome_Município) %>%
mutate( munic_name =  clean_strings(munic_name, FALSE),
uf_name    =  clean_strings(uf_name   , FALSE)  )
data_ug =
data_ug %>%
left_join(data_munic, by = c("ug_municipality"="munic_name",
"uf_code"="uf_code")) %>%
select(-ug_state)
# last adjust
data_ug_clean = data_ug %>%
distinct(ug_id, .keep_all = TRUE) %>%
rename(ug_state_code = uf_code,
ug_state_name = uf_name,
ug_munic_code = munic_code,
ug_munic_name = ug_municipality,
) %>%
relocate(ug_id,ug_state_code,ug_munic_code, ug_state_name,ug_state_name) %>%
arrange(ug_state_code, ug_munic_code)
# Save the data frame to a Stata .dta file
data_ug_clean %>%
write_dta(file.path(dropbox_dir,
"02-import",
"04-buyer_data.dta"))
}
## Made by Leandro Justino Pereira Veloso
## main: Overview in the emdat
## /*============================================================================*/
# 0: Setting R ----
{
# 1: Cleaning R
rm(list=ls())
# 2: Loading package
{
# 2: Loading package
{
packages <-
c(
# 01: Classic packages for data manipulation
"tidyverse",
"data.table",
# 02: Text manupulation pacages
"stringr",
"stringi",
"rebus",
"tm",
# 03: Date formats
"lubridate",
# 04: Reading/writting xls,xlsx
"readxl",
"writexl",
# 05: Labelling from auxiliar file
"labelled",
# 06: Nice statitics
"skimr",
# 07: Compress files
"archive",
"cli",
"R.utils"
)
# Leitura dos pacotes e dependencias
if (!require("pacman")) install.packages("pacman")
# Loading list of packages
pacman::p_load(packages,
character.only = TRUE,
install = TRUE)
}
# Leitura dos pacotes e dependencias
if (!require("pacman")) install.packages("pacman")
# Loading list of packages
pacman::p_load(packages,
character.only = TRUE,
install = TRUE)
}
# 3: Setting path
if (Sys.getenv("USERNAME") == "leand") {
print("Leandro user has been selected")
dropbox_dir  <- "C:/Users/leand/Dropbox/2-Ensino/3-doutorado/4-Doutorado- engenharia eletrica/5-papers_e_trabalhos/08-Disaster"
github_dir   <- "C:/Users/leand/Dropbox/3-Profissional/17-Github/02-PHD/PHD-03-Disaster_data_explore"
}
}
# 1: Auxiliar function
{
# Cleanning string
# 1: Clean string
{
clean_strings = function(var,rm_pontuation = FALSE) {
# Removing all that is not letter or number or space
pattern_all_not_letter_numbers =  "[^a-zA-Z0-9 ]"
#  Change LATIN to ASCII
if (rm_pontuation == FALSE) {
str_trim(
stripWhitespace(
tolower(
stri_trans_general(str = var,
id = "Latin-ASCII")))
, side = c("both"))
} else {
str_trim(
stripWhitespace(
str_replace_all(
tolower(
stri_trans_general(str = var,
id = "Latin-ASCII")
)
,
pattern = pattern_all_not_letter_numbers,
replace=" "
)
)
,side = c("both"))
}
}
# An example
example = c(" \"PAPEL COUCHÊ\" ", "Lente intraocular  mono   ",
"A, B, C. ETsats!","12-1654-LP15")
#checking function
clean_strings(example)
clean_strings(example, TRUE)
}
# 2: Converting to string
{
# 1: Function to fill the ids and remove strange charactere
format_fix = function(x, digits=11) {
#stringr::str_pad(format(x,trim = TRUE, scientific = FALSE), digits,pad="0")
if (is.numeric(x)) {
stringr::str_pad(as.character(x),digits,pad="0")
} else if (is.character(x)) {
stringr::str_pad(
str_remove_all(x, pattern = "[^0-9]")
,digits,pad="0"
)
}
}
# Checking
format_fix("1",digits=6)
format_fix(312,digits=6)
}
}
# 1: Importing data ----
{
# read the xlsx file starting from row 7
emdat <- read_excel(file.path(dropbox_dir,"2-data","01-raw","01-emdat-public-2023-03-09.xlsx")
,sheet = "emdat data", skip = 6)
# view the first few rows of the data frame
head(emdat)
#
glimpse(emdat)
brazil_us <-filter(emdat , ISO %in% c("BRA","USA" ) , Year>=2010)
count(brazil_us,Country)
}
View(brazil_us)
filter(brazil_us, ISO=="BRA")
brasil = filter(brazil_us, ISO=="BRA")
glimpse(brasil)
View(brasil)
View(brasil)
